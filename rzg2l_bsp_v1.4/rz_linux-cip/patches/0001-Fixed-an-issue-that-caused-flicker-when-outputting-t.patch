From 98a20a6da72142c9cc64c44813f6cab906d6c3d2 Mon Sep 17 00:00:00 2001
From: Hien Huynh <hien.huynh.px@renesas.com>
Date: Fri, 28 Jan 2022 11:30:38 +0700
Subject: [PATCH] Fixed an issue that caused flicker when outputting the screen

This commit is created to fix flickerring issue.

Signed-off-by: Hien Huynh <hien.huynh.px@renesas.com>
---
 drivers/gpu/drm/bridge/adv7511/adv7533.c |   5 +
 drivers/gpu/drm/rcar-du/rcar_du_crtc.c   | 287 ++++++++++++++++-------
 drivers/gpu/drm/rcar-du/rzg2l_mipi_dsi.c |   6 +-
 3 files changed, 209 insertions(+), 89 deletions(-)

diff --git a/drivers/gpu/drm/bridge/adv7511/adv7533.c b/drivers/gpu/drm/bridge/adv7511/adv7533.c
index 185b6d842166..a36fdd878da8 100644
--- a/drivers/gpu/drm/bridge/adv7511/adv7533.c
+++ b/drivers/gpu/drm/bridge/adv7511/adv7533.c
@@ -113,6 +113,11 @@ void adv7533_mode_set(struct adv7511 *adv, struct drm_display_mode *mode)
 	struct mipi_dsi_device *dsi = adv->dsi;
 	int lanes, ret;
 
+	if (adv->type == ADV7535)
+	{
+		return;
+	}
+
 	if (adv->num_dsi_lanes != 4)
 		return;
 
diff --git a/drivers/gpu/drm/rcar-du/rcar_du_crtc.c b/drivers/gpu/drm/rcar-du/rcar_du_crtc.c
index c6d32c50bac2..81e02cbfb598 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_crtc.c
+++ b/drivers/gpu/drm/rcar-du/rcar_du_crtc.c
@@ -226,157 +226,214 @@ struct cpg_param {
 	u32	dsi_div_b;
 };
 
-#define	TABLE_MAX		11
+#define	TABLE_MAX		14
 #define	TABLE_PARALLEL_MAX	11
 #define reg_write(x, a)		iowrite32(a, x)
+#define	reg_read(x)		ioread32(x)
 #define CPG_LPCLK_DIV		0
 
 struct cpg_param resolution_param[TABLE_MAX] = {
 	{
 		/* VGA 25.175MHz	*/
 		/* frequency		*/	25175,
-		/* pl5_refdiv		*/	1,
-		/* pl5_intin		*/	16,
-		/* pl5_fracin		*/	13141593,
-		/* pl5_postdiv1		*/	1,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	125,
+		/* pl5_fracin		*/	14680064,
+		/* pl5_postdiv1		*/	5,
 		/* pl5_postdiv2		*/	1,
-		/* pl5_divval		*/	6,
-		/* pl5_spread		*/	5,
-		/* dsi_div_a		*/	2,	// 1/4
-		/* dsi_div_b		*/	3,	// 1/4
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
+		/* dsi_div_b		*/	2,	// 1/3
 	},
 	{
 		/* VGA 25.200MHz	*/
 		/* frequency		*/	25200,
-		/* pl5_refdiv		*/	1,
-		/* pl5_intin		*/	16,
-		/* pl5_fracin		*/	13421773,
-		/* pl5_postdiv1		*/	1,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	75,
+		/* pl5_fracin		*/	10066329,
+		/* pl5_postdiv1		*/	3,
 		/* pl5_postdiv2		*/	1,
-		/* pl5_divval		*/	6,
-		/* pl5_spread		*/	5,
-		/* dsi_div_a		*/	2,	// 1/4
-		/* dsi_div_b		*/	3,	// 1/4
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
+		/* dsi_div_b		*/	2,	// 1/3
 	},
 	{
-		/* 480p 27.000MHz	*/
+		/* 480p/576p 27.000MHz	*/
 		/* frequency		*/	27000,
-		/* pl5_refdiv		*/	1,
-		/* pl5_intin		*/	18,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	81,
 		/* pl5_fracin		*/	0,
-		/* pl5_postdiv1		*/	1,
+		/* pl5_postdiv1		*/	3,
 		/* pl5_postdiv2		*/	1,
-		/* pl5_divval		*/	6,
-		/* pl5_spread		*/	5,
-		/* dsi_div_a		*/	2,	// 1/4
-		/* dsi_div_b		*/	3,	// 1/4
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
+		/* dsi_div_b		*/	2,	// 1/3
 	},
 	{
 		/* 480p 27.027MHz	*/
 		/* frequency		*/	27027,
-		/* pl5_refdiv		*/	1,
-		/* pl5_intin		*/	18,
-		/* pl5_fracin		*/	301990,
-		/* pl5_postdiv1		*/	1,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	81,
+		/* pl5_fracin		*/	1358954,
+		/* pl5_postdiv1		*/	3,
 		/* pl5_postdiv2		*/	1,
-		/* pl5_divval		*/	6,
-		/* pl5_spread		*/	5,
-		/* dsi_div_a		*/	2,	// 1/4
-		/* dsi_div_b		*/	3,	// 1/4
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
+		/* dsi_div_b		*/	2,	// 1/3
 	},
 	{
 		/* WVGA 29.605MHz	*/
 		/* frequency		*/	29605,
-		/* pl5_refdiv		*/	1,
-		/* pl5_intin		*/	19,
-		/* pl5_fracin		*/	12359216,
-		/* pl5_postdiv1		*/	1,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	88,
+		/* pl5_fracin		*/	13673431,
+		/* pl5_postdiv1		*/	3,
 		/* pl5_postdiv2		*/	1,
-		/* pl5_divval		*/	6,
-		/* pl5_spread		*/	5,
-		/* dsi_div_a		*/	2,	// 1/4
-		/* dsi_div_b		*/	3,	// 1/4
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
+		/* dsi_div_b		*/	2,	// 1/3
 	},
 	{
 		/* SVGA 40.00MHz	*/
 		/* frequency		*/	40000,
-		/* pl5_refdiv		*/	1,
-		/* pl5_intin		*/	43,
-		/* pl5_fracin		*/	11184810,
-		/* pl5_postdiv1		*/	1,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	80,
+		/* pl5_fracin		*/	0,
+		/* pl5_postdiv1		*/	2,
 		/* pl5_postdiv2		*/	1,
-		/* pl5_divval		*/	6,
-		/* pl5_spread		*/	5,
-		/* dsi_div_a		*/	2,	// 1/4
-		/* dsi_div_b		*/	3,	// 1/4
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
+		/* dsi_div_b		*/	2,	// 1/3
 	},
 	{
 		/* XGA	65.00MHz	*/
 		/* frequency		*/	65000,
-		/* pl5_refdiv		*/	1,
-		/* pl5_intin		*/	43,
-		/* pl5_fracin		*/	5592405,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	130,
+		/* pl5_fracin		*/	0,
+		/* pl5_postdiv1		*/	2,
+		/* pl5_postdiv2		*/	1,
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
+		/* dsi_div_b		*/	2,	// 1/3
+	},
+	{
+		/* WXGA 1280x800 71.0MHz	*/
+		/* frequency		*/	71000,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	71,
+		/* pl5_fracin		*/	0,
 		/* pl5_postdiv1		*/	1,
 		/* pl5_postdiv2		*/	1,
-		/* pl5_divval		*/	6,
-		/* pl5_spread		*/	5,
-		/* dsi_div_a		*/	2,	// 1/4
-		/* dsi_div_b		*/	3,	// 1/4
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
+		/* dsi_div_b		*/	2,	// 1/3
 	},
 	{
 		/* 720p 74.176MHz	*/
 		/* frequency		*/	74176,
-		/* pl5_refdiv		*/	1,
-		/* pl5_intin		*/	49,
-		/* pl5_fracin		*/	7560932,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	74,
+		/* pl5_fracin		*/	2952790,
 		/* pl5_postdiv1		*/	1,
 		/* pl5_postdiv2		*/	1,
-		/* pl5_divval		*/	6,
-		/* pl5_spread		*/	5,
-		/* dsi_div_a		*/	2,	// 1/4
-		/* dsi_div_b		*/	3,	// 1/4
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
+		/* dsi_div_b		*/	2,	// 1/3
 	},
 	{
 		/* 720p 74.25MHz	*/
 		/* frequency		*/	74250,
-		/* pl5_refdiv		*/	1,
-		/* pl5_intin		*/	49,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	74,
+		/* pl5_fracin		*/	4194304,
+		/* pl5_postdiv1		*/	1,
+		/* pl5_postdiv2		*/	1,
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
+		/* dsi_div_b		*/	2,	// 1/3
+	},
+	{
+		/* FWXGA 1360x768 85.5MHz	*/
+		/* frequency		*/	85500,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	85,
 		/* pl5_fracin		*/	8388608,
 		/* pl5_postdiv1		*/	1,
 		/* pl5_postdiv2		*/	1,
-		/* pl5_divval		*/	6,
-		/* pl5_spread		*/	5,
-		/* dsi_div_a		*/	2,	// 1/4
-		/* dsi_div_b		*/	3,	// 1/4
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
+		/* dsi_div_b		*/	2,	// 1/3
+	},
+	{
+		/* WXGA+ 1440x900 88.75MHz		*/
+		/* frequency		*/	88750,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	88,
+		/* pl5_fracin		*/	12582912,
+		/* pl5_postdiv1		*/	1,
+		/* pl5_postdiv2		*/	1,
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
+		/* dsi_div_b		*/	2,	// 1/3
 	},
 	{
-		/* SXGA 108MHz		*/
+		/* SXGA 108.0MHz		*/
 		/* frequency		*/	108000,
-		/* pl5_refdiv		*/	1,
-		/* pl5_intin		*/	54,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	108,
 		/* pl5_fracin		*/	0,
 		/* pl5_postdiv1		*/	1,
 		/* pl5_postdiv2		*/	1,
-		/* pl5_divval		*/	6,
-		/* pl5_spread		*/	5,
-		/* dsi_div_a		*/	2,	// 1/4
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
 		/* dsi_div_b		*/	2,	// 1/3
 	},
 	{
 		/* 1080p 148.5MHz	*/
 		/* frequency		*/	148500,
-		/* pl5_refdiv		*/	1,
-		/* pl5_intin		*/	74,
-		/* pl5_fracin		*/	4194304,
+		/* pl5_refdiv		*/	2,
+		/* pl5_intin		*/	148,
+		/* pl5_fracin		*/	8388608,
 		/* pl5_postdiv1		*/	1,
 		/* pl5_postdiv2		*/	1,
-		/* pl5_divval		*/	6,
-		/* pl5_spread		*/	5,
-		/* dsi_div_a		*/	2,	// 1/4
+		/* pl5_divval		*/	0,
+		/* pl5_spread		*/	0x16,
+		/* dsi_div_a		*/	1,	// 1/2
 		/* dsi_div_b		*/	2,	// 1/3
 	},
 };
 
+#define	CPG_SIPPL3_CLK5		(0x0134)
+#define	CPG_SIPLL5_STBY		(0x0140)
+#define	CPG_SIPLL5_CLK1		(0x0144)
+#define	CPG_SIPLL5_CLK3		(0x014C)
+#define	CPG_SIPLL5_CLK4		(0x0150)
+#define	CPG_SIPLL5_CLK5		(0x0154)
+#define	CPG_SIPLL5_MON		(0x015C)
+#define	CPG_PL2_DDIV		(0x0204)
+#define	CPG_CPG_CLKSTATUS	(0x0280)
+#define	CPG_PL5_SDIV		(0x0420)
+#define	CPG_OTHERFUNC1_REG	(0x0BE8)
+#define	CPG_CLKON_LCDC		(0x056c)
+#define	CPG_CLKMON_LCDC		(0x06EC)
+
+#define	PLL5_MON_PLL5_LOCK	(1 << 4)
+#define	DIVDSILPCLK_STS		(1 << 7)
+
 struct cpg_param resolution_param_parallel[TABLE_PARALLEL_MAX] = {
 	{
 		/* VGA 25.175MHz	*/
@@ -538,6 +595,7 @@ static void rcar_du_crtc_set_display_timing(struct rcar_du_crtc *rcrtc)
 		u32 parallelOut;
 		u32 tableMax;
 		struct cpg_param *paramPtr;
+		u32 val, nowLcdcClkOn;
 
 		if (of_machine_is_compatible("renesas,r9a07g043u")) {
 			parallelOut = 1;
@@ -567,13 +625,66 @@ static void rcar_du_crtc_set_display_timing(struct rcar_du_crtc *rcrtc)
 		if (i == tableMax)
 			index = tableMax - 1;
 
-		reg_write(cpg_base + 0x0204, 0x10000000 | (CPG_LPCLK_DIV<<12)); //CPG_PL2_DDIV: DIV_DSI_LPCLK
-		reg_write(cpg_base + 0x0420, 0x01010000 | (paramPtr[index].dsi_div_a<<0) | (paramPtr[index].dsi_div_b << 8)); //CPG_PL5_SDIV: DIV_DSI_A, DIV_DSI_B
-		reg_write(cpg_base + 0x0144, 0x01110000 | (paramPtr[index].pl5_postdiv1<<0) | (paramPtr[index].pl5_postdiv2<<4) | (paramPtr[index].pl5_refdiv<<8)); //CPG_PLL5_CLK1: POSTDIV1, POSTDIV2, REFDIV
-		reg_write(cpg_base + 0x014C, (paramPtr[index].pl5_divval<<0) | (paramPtr[index].pl5_fracin<<8)); //CPG_PLL5_CLK3: DIVVAL=6, FRACIN
-		reg_write(cpg_base + 0x0150, 0x000000ff | (paramPtr[index].pl5_intin<<16)); //CPG_PLL5_CLK4: INTIN
-		reg_write(cpg_base + 0x0154, (paramPtr[index].pl5_spread<<0)); //CPG_PLL5_CLK5: SPREAD
-		reg_write(cpg_base + 0x0140, 0x00150001); //CPG_PLL5_STBY: RESETB=1
+		if ((parallelOut == 0) && (paramPtr[i].frequency > 74250))
+		{
+			reg_write(cpg_base + CPG_SIPPL3_CLK5, 0x02);
+		}
+		val = reg_read(cpg_base + CPG_CLKON_LCDC);
+		if (val != 0)
+		{
+			nowLcdcClkOn = 1;
+		}
+		else
+		{
+			nowLcdcClkOn = 0;
+		}
+		if (nowLcdcClkOn)
+		{
+			reg_write(cpg_base + CPG_CLKON_LCDC, 0x30000); //LCDC Clock Off
+			do
+			{
+				val = reg_read(cpg_base + CPG_CLKMON_LCDC);
+			} while(val != 0);
+		}
+
+		reg_write(cpg_base + CPG_SIPLL5_STBY, 0x10000); // RESETB = 0 Reset State
+		do {
+			val = reg_read(cpg_base + CPG_SIPLL5_MON);
+		} while ((val & PLL5_MON_PLL5_LOCK) != 0);
+		reg_write(cpg_base + CPG_SIPLL5_CLK1, 0x01110000 | (paramPtr[index].pl5_postdiv1<<0) | (paramPtr[index].pl5_postdiv2<<4) | (paramPtr[index].pl5_refdiv<<8)); //POSTDIV1, POSTDIV2, REFDIV
+		reg_write(cpg_base + CPG_SIPLL5_CLK3, (paramPtr[index].pl5_divval<<0) | (paramPtr[index].pl5_fracin<<8)); //DIVVAL, FRACIN
+		reg_write(cpg_base + CPG_SIPLL5_CLK4, 0x000000ff | (paramPtr[index].pl5_intin<<16)); //INTIN
+		reg_write(cpg_base + CPG_SIPLL5_CLK5, (paramPtr[index].pl5_spread<<0)); //SPREAD
+		if (parallelOut == 0) {
+			do
+			{
+				val = reg_read(cpg_base + CPG_CPG_CLKSTATUS);
+			} while ((val & DIVDSILPCLK_STS) != 0);
+			reg_write(cpg_base + CPG_PL2_DDIV, 0x10000000 | (CPG_LPCLK_DIV<<12)); //DIV_DSI_LPCLK
+			do
+			{
+				val = reg_read(cpg_base + CPG_CPG_CLKSTATUS);
+			} while ((val & DIVDSILPCLK_STS) != 0);
+			reg_write(cpg_base + CPG_OTHERFUNC1_REG, 0x10001); //SEL_PLL5_3 clock
+			reg_write(cpg_base + CPG_PL5_SDIV, 0x01010000 | (paramPtr[index].dsi_div_a<<0) | (paramPtr[index].dsi_div_b << 8)); //DIV_DSI_A, DIV_DSI_B
+		} else {
+			reg_write(cpg_base + CPG_PL5_SDIV, 0x01010000 | (paramPtr[index].dsi_div_a<<0) | (paramPtr[index].dsi_div_b << 8)); //DIV_DSI_A, DIV_DSI_B
+		}
+		reg_write(cpg_base + CPG_SIPLL5_STBY, 0x00050001);
+		do
+		{
+			val = reg_read(cpg_base + CPG_SIPLL5_MON);
+		} while ((val & PLL5_MON_PLL5_LOCK) == 0);
+
+		if (nowLcdcClkOn)
+		{
+			reg_write(cpg_base + CPG_CLKON_LCDC, 0x30003);// LCDC Clock On
+			do
+			{
+				val = reg_read(cpg_base + CPG_CLKMON_LCDC);
+			} while(val == 0);
+		}
+
 		iounmap(cpg_base);
 
 		ditr0 = (DU_DITR0_DEMD_HIGH
diff --git a/drivers/gpu/drm/rcar-du/rzg2l_mipi_dsi.c b/drivers/gpu/drm/rcar-du/rzg2l_mipi_dsi.c
index 521141364e16..5aaf9772441d 100644
--- a/drivers/gpu/drm/rcar-du/rzg2l_mipi_dsi.c
+++ b/drivers/gpu/drm/rcar-du/rzg2l_mipi_dsi.c
@@ -173,7 +173,11 @@ static int rzg2l_mipi_dsi_startup(struct rzg2l_mipi_dsi *mipi_dsi)
 		timings.ths_settle = 9;
 		timings.ths_exit = 13;
 		timings.ths_trail = 17;
-		timings.ths_zero = 23;
+		if (IS_ENABLED(CONFIG_DRM_I2C_ADV7511)) {
+			timings.ths_zero = 25;
+		} else {
+			timings.ths_zero = 23;
+		}
 	}
 
 	dphytim0 = DSIDPHYTIM0_TCLK_MISS(timings.tclk_miss) |
-- 
2.17.1

